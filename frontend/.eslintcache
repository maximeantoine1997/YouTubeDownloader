[{"C:\\Users\\maxim\\Documents\\Projects\\YouTube Downloader\\frontend\\src\\index.tsx":"1","C:\\Users\\maxim\\Documents\\Projects\\YouTube Downloader\\frontend\\src\\App.tsx":"2","C:\\Users\\maxim\\Documents\\Projects\\YouTube Downloader\\frontend\\src\\serverCalls.ts":"3","C:\\Users\\maxim\\Documents\\Projects\\YouTubeDownloader\\frontend\\src\\index.tsx":"4","C:\\Users\\maxim\\Documents\\Projects\\YouTubeDownloader\\frontend\\src\\App.tsx":"5","C:\\Users\\maxim\\Documents\\Projects\\YouTubeDownloader\\frontend\\src\\serverCalls.ts":"6"},{"size":424,"mtime":1609356749671,"results":"7","hashOfConfig":"8"},{"size":5656,"mtime":1609386514826,"results":"9","hashOfConfig":"8"},{"size":573,"mtime":1609177108002,"results":"10","hashOfConfig":"8"},{"size":424,"mtime":1609356749671,"results":"11","hashOfConfig":"12"},{"size":5656,"mtime":1609386514826,"results":"13","hashOfConfig":"12"},{"size":573,"mtime":1609177108002,"results":"14","hashOfConfig":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1hyxpwk",{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1e10kmp",{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\maxim\\Documents\\Projects\\YouTube Downloader\\frontend\\src\\index.tsx",[],["30","31"],"C:\\Users\\maxim\\Documents\\Projects\\YouTube Downloader\\frontend\\src\\App.tsx",["32","33","34"],"import {Button, CircularProgress, Fade, FormControl, Grid, InputLabel, makeStyles, MenuItem, Select, Slide, TextField, Typography } from '@material-ui/core';\nimport { ToggleButtonGroup, ToggleButton } from '@material-ui/lab';\nimport React, {useRef, useState } from 'react';\nimport { post_request } from './serverCalls';\nimport Background from \"./images/background2.jpg\";\nimport { useSnackbar } from \"notistack\"\n\nconst useStyles = makeStyles({\n  root: {\n    backgroundImage: `url(${Background})`,\n    backgroundSize: \"cover\",\n    height: \"100vh\"\n  },\n  button: {\n    backgroundColor: \"white\",\n    marginBottom: \"25px\",\n    \"&:hover\": {\n      backgroundColor: \"#152230\",\n      color: \"white\",\n      transition: \"0.2s\"\n    },\n  },\n  selectedButton: {\n    color: \"white\",\n    backgroundColor: \"#41AAE0\",\n    marginBottom: \"25px\",\n  },\n  textInput: {\n    width: \"50vw\",\n    backgroundColor: \"white\"\n  },\n  card: {\n    backgroundColor: \"white\",\n    borderRadius: \"25px\",\n    padding: \"25px\",\n    minHeight: \"50vh\",\n    boxShadow: \" 0 2.8px 2.2px rgba(0, 0, 0, 0.034), 0 6.7px 5.3px rgba(0, 0, 0, 0.048), 0 12.5px 10px rgba(0, 0, 0, 0.06), 0 22.3px 17.9px rgba(0, 0, 0, 0.072), 0 41.8px 33.4px rgba(0, 0, 0, 0.086), 0 100px 80px rgba(0, 0, 0, 0.12)\"\n  },\n  downloadButton: {\n    width: \"100%\",\n    padding: \"10px\"\n  }\n});\n\nconst App = () =>{\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar()\n\n  const linkRef = useRef<string>(\"\")\n  const [format, setFormat] = useState<number>(1) // 1=Video+Audio 2=Video 3=Audio \n  const [quality, setQuality] = useState<number>(1080) // 720 or 1080 \n  const [isLoading, setIsLoading] = useState<boolean>(false)\n\n  const download = async () => {\n    if (linkRef.current && format && quality){\n      setIsLoading(true)\n      await post_request(\"/youtube\", {\"link\": linkRef.current, \"format\": format, quality: quality})\n      setIsLoading(false)\n      enqueueSnackbar(\"Download Complete\", { variant: \"success\" })\n    } else {\n      enqueueSnackbar(\"Link is Missing\", { variant: \"error\" })\n    }\n  }\n\n  const onBlur = async (e: any) => {\n    const newLink: string = e.target.value\n    console.log(newLink)\n    linkRef.current = newLink\n  }\n\n  const changeType = (newType: number) => {\n    setFormat(newType)\n  }\n\n  const changeQuality = (newquality: number) => {\n    setQuality(newquality)\n  }\n\n\n  return (\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" className={classes.root}>\n        <Grid>\n          <Fade in={true} timeout={1500}>\n            <Typography variant=\"h3\" style={{paddingBottom: \"25px\", color: \"white\"}}>\n              YouTube Downloader\n            </Typography>\n          </Fade>\n        </Grid>\n        <Grid item >\n          <Grid container direction=\"column\" justify=\"space-evenly\" alignItems=\"center\" className={classes.card}>\n            <Grid item style={{padding: \"25px\"}}>\n              <TextField label=\"Paste your YouTube link\" color=\"primary\" variant=\"outlined\" onBlur={onBlur} className={classes.textInput}/>\n            </Grid>\n            <Grid item style={{width: \"100%\", paddingBottom: \"25px\"}}>\n              <Grid container justify=\"center\">\n                <Grid item style={{paddingRight: \"20px\"}}>\n                  <FormControl variant=\"outlined\">\n                    <InputLabel id=\"Format\">Format</InputLabel>\n                    <Select\n                      id=\"Format\"\n                      value={format}\n                      onChange={(e,_) => changeType(e.target.value as number)}\n                      label=\"Format\"\n                    >\n                      <MenuItem value={1}>Video + Audio</MenuItem>\n                      <MenuItem value={2}>Video Only</MenuItem>\n                      <MenuItem value={3}>Audio Only</MenuItem>\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid item style={{paddingLeft: \"20px\"}}>\n                  {format === 1 || format === 2 ? \n                  \n                    <FormControl variant=\"outlined\">\n                      <InputLabel id=\"quality\">Quality</InputLabel>\n                      <Select\n                        id=\"quality\"\n                        value={quality}\n                        onChange={(e,_) => changeQuality(e.target.value as number)}\n                        label=\"Quality\"\n                      >\n                        <MenuItem value={720}>720p</MenuItem>\n                        <MenuItem value={1080}>1080p</MenuItem>\n                      </Select>\n                    </FormControl>\n                    :\n                    <></>\n                  }\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item style={{ width: \"50%\"}}>\n              <Button className={classes.downloadButton} size=\"large\" variant=\"outlined\" color=\"primary\" onClick={download}>DOWNLOAD</Button>\n            </Grid>\n          </Grid>\n        </Grid>\n        { isLoading ? \n          <Fade in={isLoading} timeout={1500}>\n            <Grid item style={{ paddingTop: \"25px\", height: \"5vh\"}}>\n              <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n                <Grid item>\n                  <CircularProgress style={{ color: \"white\"}}/>\n                </Grid>\n                <Grid item >\n                  <Typography variant=\"h6\" style={{ color: \"white\"}}>\n                    Downloading\n                  </Typography>\n                </Grid>\n              </Grid> \n            </Grid>\n          </Fade>\n          :\n          <Grid item style={{ paddingTop: \"25px\", height: \"5vh\"}}></Grid>\n        }\n      </Grid>\n  );\n}\n\nexport default App;\n","C:\\Users\\maxim\\Documents\\Projects\\YouTube Downloader\\frontend\\src\\serverCalls.ts",[],["35","36"],"C:\\Users\\maxim\\Documents\\Projects\\YouTubeDownloader\\frontend\\src\\index.tsx",[],"C:\\Users\\maxim\\Documents\\Projects\\YouTubeDownloader\\frontend\\src\\App.tsx",["37","38","39"],"C:\\Users\\maxim\\Documents\\Projects\\YouTubeDownloader\\frontend\\src\\serverCalls.ts",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":1,"column":102,"nodeType":"46","messageId":"47","endLine":1,"endColumn":107},{"ruleId":"44","severity":1,"message":"48","line":2,"column":10,"nodeType":"46","messageId":"47","endLine":2,"endColumn":27},{"ruleId":"44","severity":1,"message":"49","line":2,"column":29,"nodeType":"46","messageId":"47","endLine":2,"endColumn":41},{"ruleId":"40","replacedBy":"50"},{"ruleId":"42","replacedBy":"51"},{"ruleId":"44","severity":1,"message":"45","line":1,"column":102,"nodeType":"46","messageId":"47","endLine":1,"endColumn":107},{"ruleId":"44","severity":1,"message":"48","line":2,"column":10,"nodeType":"46","messageId":"47","endLine":2,"endColumn":27},{"ruleId":"44","severity":1,"message":"49","line":2,"column":29,"nodeType":"46","messageId":"47","endLine":2,"endColumn":41},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"@typescript-eslint/no-unused-vars","'Slide' is defined but never used.","Identifier","unusedVar","'ToggleButtonGroup' is defined but never used.","'ToggleButton' is defined but never used.",["52"],["53"],"no-global-assign","no-unsafe-negation"]